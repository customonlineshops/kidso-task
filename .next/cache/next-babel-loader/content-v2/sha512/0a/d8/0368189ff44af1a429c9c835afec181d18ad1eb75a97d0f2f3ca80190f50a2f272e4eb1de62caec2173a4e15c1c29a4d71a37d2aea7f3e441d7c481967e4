{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\programs\\\\projects\\\\nextjs-react\\\\pages\\\\[...slug].jsx\";\nimport Head from 'next/head';\nimport content from '../page.content.json';\nexport default function Page({\n  page\n}) {\n  console.log(page);\n\n  if (!page) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Not found 404\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 9\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: Object.values(page)[0].title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        dangerouslySetInnerHTML: {\n          __html: Object.values(page)[0].content\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n}\nexport async function getStaticPaths() {\n  const paths = content.page.map(p => {\n    const slug = Object.values(p)[0].url.split('/').slice(1);\n    return {\n      params: {\n        slug\n      }\n    };\n  });\n  console.log(paths);\n  return {\n    paths,\n    fallback: true\n  };\n}\nexport async function getStaticProps({\n  params\n}) {\n  const currentPath = `/${params.slug.join('/')}`;\n  const page = content.page.find(page => Object.values(page)[0].url === currentPath) || {\n    notfound: true\n  };\n  return {\n    props: {\n      page\n    }\n  };\n}","map":{"version":3,"sources":["D:/programs/projects/nextjs-react/pages/[...slug].jsx"],"names":["Head","content","Page","page","console","log","Object","values","title","__html","getStaticPaths","paths","map","p","slug","url","split","slice","params","fallback","getStaticProps","currentPath","join","find","notfound","props"],"mappings":";;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AAEA,eAAe,SAASC,IAAT,CAAc;AAACC,EAAAA;AAAD,CAAd,EAAsB;AACjCC,EAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;;AACF,MAAI,CAACA,IAAL,EAAW;AACT,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAGD,GAJD,MAIM;AACN,wBACI;AAAA,8BAIE;AAAA,kBAAKG,MAAM,CAACC,MAAP,CAAcJ,IAAd,EAAoB,CAApB,EAAuBK;AAA5B;AAAA;AAAA;AAAA;AAAA,cAJF,eAKE;AAAK,QAAA,uBAAuB,EAAE;AAACC,UAAAA,MAAM,EAAEH,MAAM,CAACC,MAAP,CAAcJ,IAAd,EAAoB,CAApB,EAAuBF;AAAhC;AAA9B;AAAA;AAAA;AAAA;AAAA,cALF;AAAA,oBADJ;AASD;AACA;AAED,OAAO,eAAeS,cAAf,GAAgC;AACrC,QAAMC,KAAK,GAAGV,OAAO,CAACE,IAAR,CAAaS,GAAb,CAAiBC,CAAC,IAAI;AAClC,UAAMC,IAAI,GAAGR,MAAM,CAACC,MAAP,CAAcM,CAAd,EAAiB,CAAjB,EAAoBE,GAApB,CAAwBC,KAAxB,CAA8B,GAA9B,EAAmCC,KAAnC,CAAyC,CAAzC,CAAb;AACA,WAAO;AAACC,MAAAA,MAAM,EAAE;AAACJ,QAAAA;AAAD;AAAT,KAAP;AACD,GAHa,CAAd;AAIAV,EAAAA,OAAO,CAACC,GAAR,CAAYM,KAAZ;AACA,SAAO;AAACA,IAAAA,KAAD;AAAQQ,IAAAA,QAAQ,EAAE;AAAlB,GAAP;AACD;AAED,OAAO,eAAeC,cAAf,CAA8B;AAACF,EAAAA;AAAD,CAA9B,EAAwC;AAC7C,QAAMG,WAAW,GAAI,IAAGH,MAAM,CAACJ,IAAP,CAAYQ,IAAZ,CAAiB,GAAjB,CAAsB,EAA9C;AACA,QAAMnB,IAAI,GAAGF,OAAO,CAACE,IAAR,CAAaoB,IAAb,CAAkBpB,IAAI,IAAIG,MAAM,CAACC,MAAP,CAAcJ,IAAd,EAAoB,CAApB,EAAuBY,GAAvB,KAA+BM,WAAzD,KAAyE;AAACG,IAAAA,QAAQ,EAAE;AAAX,GAAtF;AACA,SAAO;AAACC,IAAAA,KAAK,EAAE;AAACtB,MAAAA;AAAD;AAAR,GAAP;AACD","sourcesContent":["import Head from 'next/head';\r\nimport content from '../page.content.json';\r\n\r\nexport default function Page({page}) {\r\n    console.log(page)\r\n  if (!page) {\r\n    return (\r\n        <div>Not found 404</div>\r\n    )\r\n  } else{\r\n  return (\r\n      <>\r\n        {/* <Head>\r\n          <title>{page.title} | {content.title}</title>\r\n        </Head> */}\r\n        <h1>{Object.values(page)[0].title}</h1>\r\n        <div dangerouslySetInnerHTML={{__html: Object.values(page)[0].content}}></div>\r\n      </>\r\n  );\r\n}\r\n}\r\n\r\nexport async function getStaticPaths() {\r\n  const paths = content.page.map(p => {\r\n    const slug = Object.values(p)[0].url.split('/').slice(1);\r\n    return {params: {slug}};\r\n  });\r\n  console.log(paths)\r\n  return {paths, fallback: true};\r\n}\r\n\r\nexport async function getStaticProps({params}) {\r\n  const currentPath = `/${params.slug.join('/')}`;\r\n  const page = content.page.find(page => Object.values(page)[0].url === currentPath) || {notfound: true};\r\n  return {props: {page}};\r\n}"]},"metadata":{},"sourceType":"module"}